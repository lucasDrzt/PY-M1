import sys
import os
from Fleet import Fleet
from Spaceship import Spaceship
from Operator import Operator
from Mentalist import Mentalist
from SaveLoad import save_data, load_data
from Matrix import matrix_effect


def clear_terminal():
    os.system('cls' if os.name == 'nt' else 'clear')

def print_title(title):
    print("\033[1;36m" + "‚ïê" * (len(title) + 4))
    print(f"| {title} |")
    print("‚ïê" * (len(title) + 4) + "\033[0m")

def main_menu():
    fleets = []
    file_name = "data.json"  

    while True:
        clear_terminal()
        print_title("üöÄ MENU DE GESTION DES FLOTES")
        print("1Ô∏è‚É£ Ajouter une flotte")
        print("2Ô∏è‚É£ Ajouter un vaisseau √† une flotte")
        print("3Ô∏è‚É£ G√©rer un √©quipage")
        print("4Ô∏è‚É£ Afficher les statistiques d'une flotte")
        print("5Ô∏è‚É£ Sauvegarder la flotte")
        print("6Ô∏è‚É£ Charger une flotte")
        print("7Ô∏è‚É£ Quitter")

        choix = input("Choisissez une option : ")

        if not choix.isdigit():
            print("‚ùå Veuillez entrer un nombre valide.")
            input("\nAppuyez sur Entr√©e pour continuer...")
            continue

        choix = int(choix)

        if choix == 1:
            clear_terminal()
            fleet_name = input("‚úèÔ∏è Entrez le nom de la flotte : ")
            fleet = Fleet(fleet_name)
            fleets.append(fleet)
            print(f"‚úÖ Flotte '{fleet_name}' ajout√©e avec succ√®s.")
            input("\nAppuyez sur Entr√©e pour continuer...")

        elif choix == 2:
            clear_terminal()
            if not fleets:
                print("‚ùå Aucune flotte disponible. Veuillez en cr√©er une d'abord.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            print("üåå Flottes disponibles :")
            for idx, fleet in enumerate(fleets):
                print(f"{idx + 1}. {fleet.get_name()}")

            fleet_idx = input("üî¢ Choisissez une flotte (par num√©ro) : ")
            if not fleet_idx.isdigit():
                print("‚ùå Veuillez entrer un nombre valide.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            fleet_idx = int(fleet_idx) - 1

            if 0 <= fleet_idx < len(fleets):
                fleet = fleets[fleet_idx]
                ship_name = input("‚úèÔ∏è Entrez le nom du vaisseau : ")
                ship_type = input("‚úèÔ∏è Entrez le type de vaisseau : ")
                spaceship = Spaceship(ship_name, ship_type)
                fleet.add_spaceship(spaceship)
                print(f"‚úÖ Vaisseau '{ship_name}' ajout√© √† la flotte.")
                input("\nAppuyez sur Entr√©e pour continuer...")
            else:
                print("‚ùå Flotte invalide.")
                input("\nAppuyez sur Entr√©e pour continuer...")

        elif choix == 3:
            clear_terminal()
            if not fleets:
                print("‚ùå Aucune flotte disponible. Veuillez en cr√©er une d'abord.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            print("üåå Flottes disponibles :")
            for idx, fleet in enumerate(fleets):
                print(f"{idx + 1}. {fleet.get_name()}")

            fleet_idx = input("üî¢ Choisissez une flotte (par num√©ro) : ")
            if not fleet_idx.isdigit():
                print("‚ùå Veuillez entrer un nombre valide.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            fleet_idx = int(fleet_idx) - 1

            if 0 <= fleet_idx < len(fleets):
                fleet = fleets[fleet_idx]
                print("üöÄ Vaisseaux dans la flotte :")
                for idx, spaceship in enumerate(fleet.get_spaceships()):
                    print(f"{idx + 1}. {spaceship.get_name()}")

                ship_idx = input("üî¢ Choisissez un vaisseau (par num√©ro) : ")
                if not ship_idx.isdigit():
                    print("‚ùå Veuillez entrer un nombre valide.")
                    input("\nAppuyez sur Entr√©e pour continuer...")
                    continue

                ship_idx = int(ship_idx) - 1

                if 0 <= ship_idx < len(fleet.get_spaceships()):
                    spaceship = fleet.get_spaceships()[ship_idx]
                    manage_crew(spaceship)
                else:
                    print("‚ùå Vaisseau invalide.")
                    input("\nAppuyez sur Entr√©e pour continuer...")
            else:
                print("‚ùå Flotte invalide.")
                input("\nAppuyez sur Entr√©e pour continuer...")

        elif choix == 4:
            clear_terminal()
            if not fleets:
                print("‚ùå Aucune flotte disponible.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            print("üåå Flottes disponibles :")
            for idx, fleet in enumerate(fleets):
                print(f"{idx + 1}. {fleet.get_name()}")

            fleet_idx = input("üî¢ Choisissez une flotte (par num√©ro) : ")
            if not fleet_idx.isdigit():
                print("‚ùå Veuillez entrer un nombre valide.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            fleet_idx = int(fleet_idx) - 1

            if 0 <= fleet_idx < len(fleets):
                fleet = fleets[fleet_idx]
                fleet.statistics_from_file("data.json")
                input("\nAppuyez sur Entr√©e pour continuer...")
            else:
                print("‚ùå Flotte invalide.")
                input("\nAppuyez sur Entr√©e pour continuer...")


        elif choix == 5:
            clear_terminal()
            if not fleets:
                print("‚ùå Aucune flotte disponible √† sauvegarder.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            fleet_data = {
                "fleets": [
                    {
                        "name": fleet.get_name(),
                        "spaceships": [
                            {
                                "name": ship.get_name(),
                                "type": ship.get_ship_type(),
                                "condition": ship.get_condition(),
                                "crew": [
                                    {
                                        "first_name": member.get_first_name(),
                                        "last_name": member.get_last_name(),
                                        "role": member.get_role() if isinstance(member, Operator) else "Mentalist",
                                        "age": member.get_age()
                                    }
                                    for member in ship.get_crew()
                                ]
                            }
                            for ship in fleet.get_spaceships()
                        ]
                    }
                    for fleet in fleets
                ]
            }

            save_data(fleet_data, file_name)
            print(f"‚úÖ Donn√©es de la flotte sauvegard√©es dans '{file_name}'.")
            input("\nAppuyez sur Entr√©e pour continuer...")


        elif choix == 6:
            clear_terminal()
            loaded_data = load_data(file_name)
            if loaded_data and "fleets" in loaded_data:
                fleets.clear()
                try:
                    for fleet_info in loaded_data["fleets"]:
                        fleet = Fleet(fleet_info["name"])
                        for ship_info in fleet_info.get("spaceships", []):
                            spaceship = Spaceship(
                                ship_info["name"],
                                ship_info["type"],
                                ship_info.get("condition", "op√©rationnel")
                            )
                            for member_info in ship_info.get("crew", []):
                                if member_info["role"].lower() == "mentaliste":
                                    member = Mentalist(
                                        member_info["first_name"],
                                        member_info["last_name"],
                                        "Unknown",
                                        member_info["age"]
                                    )
                                else:
                                    member = Operator(
                                        member_info["first_name"],
                                        member_info["last_name"],
                                        "Unknown",
                                        member_info["age"],
                                        member_info["role"]
                                    )
                                spaceship.add_member(member)
                            fleet.add_spaceship(spaceship)
                        fleets.append(fleet)
                    print(f"‚úÖ Flotte(s) charg√©e(s) depuis '{file_name}'.")
                    input("\nAppuyez sur Entr√©e pour continuer...")
                except KeyError as e:
                    print(f"‚ùå Donn√©es invalides ou manquantes dans le fichier JSON : {e}")
                    input("\nAppuyez sur Entr√©e pour continuer...")
            else:
                print("‚ùå Aucun fichier valide trouv√© pour charger les donn√©es.")
                input("\nAppuyez sur Entr√©e pour continuer...")


        elif choix == 7:
            clear_terminal()
            print("üëã Au revoir !")
            sys.exit()

        else:
            print("‚ùå Option invalide. Veuillez r√©essayer.")
            input("\nAppuyez sur Entr√©e pour continuer...")

def manage_crew(spaceship):
    while True:
        clear_terminal()
        print_title("üë®‚ÄçüöÄ MENU DE L'√âQUIPAGE")
        print("1Ô∏è‚É£ Ajouter un membre")
        print("2Ô∏è‚É£ Supprimer un membre")
        print("3Ô∏è‚É£ Afficher l'√©quipage")
        print("4Ô∏è‚É£ V√©rifier l'√©quipage")
        print("5Ô∏è‚É£ Retour")

        choix = input("üåü Choisissez une option : ")

        if not choix.isdigit():
            print("‚ùå Veuillez entrer un nombre valide.")
            input("\nAppuyez sur Entr√©e pour continuer...")
            continue

        choix = int(choix)

        if choix == 1:
            first_name = input("‚úèÔ∏è Pr√©nom : ")
            last_name = input("‚úèÔ∏è Nom : ")
            gender = input("‚úèÔ∏è Genre : ")
            age = input("‚úèÔ∏è √Çge : ")
            if not age.isdigit():
                print("‚ùå Veuillez entrer un √¢ge valide.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            age = int(age)
            role = input("‚úèÔ∏è R√¥le (Mentaliste ou r√¥le sp√©cifique) : ")

            if role.lower() == "mentaliste":
                member = Mentalist(first_name, last_name, gender, age)
            else:
                experience = input("‚úèÔ∏è Exp√©rience : ")
                if not experience.isdigit():
                    print("‚ùå Veuillez entrer un nombre valide pour l'exp√©rience.")
                    input("\nAppuyez sur Entr√©e pour continuer...")
                    continue

                experience = int(experience)
                member = Operator(first_name, last_name, gender, age, role, experience)

            spaceship.add_member(member)

        elif choix == 2:
            crew = spaceship.get_crew()
            if not crew:
                print("‚ùå √âquipage vide.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            print("üöÄ Membres de l'√©quipage :")
            for idx, member in enumerate(crew):
                print(f"{idx + 1}. {member.get_first_name()} {member.get_last_name()}")

            member_idx = input("üî¢ Choisissez un membre √† supprimer (par num√©ro) : ")
            if not member_idx.isdigit():
                print("‚ùå Veuillez entrer un nombre valide.")
                input("\nAppuyez sur Entr√©e pour continuer...")
                continue

            member_idx = int(member_idx) - 1

            if 0 <= member_idx < len(crew):
                removed_member = crew.pop(member_idx)
                print(f"‚úÖ {removed_member.get_first_name()} {removed_member.get_last_name()} a √©t√© supprim√© de l'√©quipage.")
                input("\nAppuyez sur Entr√©e pour continuer...")
            else:
                print("‚ùå Membre invalide.")
                input("\nAppuyez sur Entr√©e pour continuer...")

        elif choix == 3:
            spaceship.list_crew()
            input("\nAppuyez sur Entr√©e pour continuer...")

        elif choix == 4:
            spaceship.check_preparation()
            input("\nAppuyez sur Entr√©e pour continuer...")

        elif choix == 5:
            break

        else:
            print("‚ùå Option invalide. Veuillez r√©essayer.")
            input("\nAppuyez sur Entr√©e pour continuer...")

if __name__ == "__main__":
    try:
        clear_terminal()
        matrix_effect()
        main_menu()
    except Exception as e:
        print(f"‚ùå Une erreur inattendue est survenue : {e}")
